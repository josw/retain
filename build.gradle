apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'eclipse-wtp'

eclipse {
	wtp {
		facet {
		  facet name: 'jst.web', version: '3.1'
		  facet name: 'jst.java', version: '1.7'
		  facet name: 'wst.jsdt.web', version: '1.0'
		}
	}
 	classpath {
        defaultOutputDir = file("${buildDir}/classes/main")
    }
}

ext {
    generatedSourcesDir = file("${buildDir}/generated-sources")
}


repositories {
	maven { url "http://repo.spring.io/release" }
	mavenCentral()
}


sourceSets {
    main {
        java {
            srcDir "src/main/java"
            srcDir generatedSourcesDir
        }
    }
}

configurations {
    querydslapt
    all*.exclude group: "commons-logging", module: "commons-logging"
}

dependencies {
	providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
	compile 'org.springframework:spring-webmvc:4.1.2.RELEASE'
	compile 'org.springframework:spring-test:4.1.2.RELEASE'
	compile 'org.springframework.data:spring-data-jpa:1.7.1.RELEASE'
	compile 'org.springframework.security:spring-security-config:3.2.5.RELEASE'
	compile 'org.springframework.security:spring-security-web:3.2.5.RELEASE'
	compile 'org.thymeleaf:thymeleaf-spring4:2.1.3.RELEASE'
	compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.4.3'
	compile 'ch.qos.logback:logback-core:1.1.2'
	compile 'org.slf4j:slf4j-api:1.7.7'
	compile 'org.projectlombok:lombok:1.14.8'
	compile 'ch.qos.logback:logback-classic:1.1.2'
	compile 'com.google.guava:guava:18.0'
	compile 'org.hibernate:hibernate-entitymanager:4.3.7.Final'
	compile 'ch.qos.logback:logback-classic:1.1.2'
	compile 'org.codehaus.groovy:groovy-all:2.3.8'
	compile 'com.mysema.querydsl:querydsl-jpa:3.6.0'
	
	runtime 'mysql:mysql-connector-java:5.1.34'
	runtime 'org.apache.tomcat:tomcat-catalina:8.0.15'
	
	querydslapt 'com.mysema.querydsl:querydsl-apt:3.6.0'
	
}






project.group = 'com.swj.stock'
project.version = '0.0.1-SNAPSHOT'

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.querydslapt
    options.compilerArgs = [
            "-proc:only",
            "-processor", "com.mysema.query.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = generatedSourcesDir
}

compileJava {
    doFirst {
        generatedSourcesDir.mkdirs();
    }
    options.compilerArgs += ['-s', generatedSourcesDir]
 
    dependsOn generateQueryDSL
}

task wrapper(type:Wrapper) {
	gradleVersion = '2.2'
}
